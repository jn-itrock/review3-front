"use client";
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import { WagmiConfig, configureChains, createConfig } from 'wagmi';
import { polygon, polygonMumbai } from 'wagmi/chains';
import { InjectedConnector } from 'wagmi/connectors/injected';
import { publicProvider } from 'wagmi/providers/public';
import { LensConfig, development, production } from '@lens-protocol/react-web';
import { bindings as wagmiBindings } from '@lens-protocol/wagmi';
import { LensProvider } from '@lens-protocol/react-web';
import { EthereumClient, w3mConnectors, w3mProvider } from '@web3modal/ethereum'
import { Web3Modal } from '@web3modal/react'

const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const chains = [polygon]
  const projectId = 'f542afa6942831c90340b3297550a386'

  const { publicClient } = configureChains(chains, [w3mProvider({ projectId })])

  const config = createConfig({
    autoConnect: true,
    publicClient,
    connectors: w3mConnectors({ projectId, chains }),
  });
  const ethereumClient = new EthereumClient(config, chains)


  const lensConfig: LensConfig = {
    bindings: wagmiBindings(),
    environment: production,
  };

  return (
    <html lang="en">
      <body className={inter.className}>
        <>
        <WagmiConfig config={config}>
          <LensProvider config={lensConfig}>
            {children}
          </LensProvider>
        </WagmiConfig>
        <Web3Modal projectId={projectId} ethereumClient={ethereumClient} />
        </>
      </body>
    </html>
  )
}
